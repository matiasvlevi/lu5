{"methods":[{"source":{"header":"lu5_math.h","start_line":7,"end_line":16},"doc":{"_return":{"var":"number","description":"The random value"},"name":"randomSeed","examples":{},"_type":"method","description":"Set a random seed","bottom_description":"","calls":[{"arguments":[{"description":"The seed value","name":"seed"}]}]}},{"source":{"header":"lu5_math.h","start_line":18,"end_line":45},"doc":{"_return":{"var":"number","description":"The random value"},"name":"random","examples":{},"_type":"method","description":"Get a random number","bottom_description":"","calls":[{"arguments":[{"description":"The maximum of the range","name":"max"}],"example":"random()      -- random number between 0 and 1\nrandom(3)     -- random number between 0 and 3"},{"arguments":[{"description":"The minimum of the range","name":"min"},{"description":"The maximum of the range","name":"max"}],"example":"random(3, 12) -- random number between 3 and 12"},{"arguments":[{"description":"The array to randomly select an item from","name":"arr"}],"example":"random({ 'A', 'B', 'C' }) -- random element in table"}]}},{"source":{"header":"lu5_math.h","start_line":47,"end_line":55},"doc":{"_return":{"var":"int","description":"The rounded value"},"name":"round","examples":{},"_type":"method","description":"Round a number to the nearest integer","bottom_description":"","calls":[{"arguments":[{"description":"The value to round","name":"x"}]}]}},{"source":{"header":"lu5_math.h","start_line":57,"end_line":65},"doc":{"_return":{"var":"int","description":"greatest integer less than or equals to x"},"name":"floor","examples":{},"_type":"method","description":"floor is a function that takes in a number, and returns the greatest integer less or equal to x<br/><a href=\"https://en.wikipedia.org/wiki/Floor_and_ceiling_functions\">see here</a> ","bottom_description":"","calls":[{"arguments":[{"description":"The value to floor","name":"x"}]}]}},{"source":{"header":"lu5_math.h","start_line":67,"end_line":75},"doc":{"_return":{"var":"int","description":"The floored value"},"name":"ceil","examples":{},"_type":"method","description":"ceil is a function that takes in a number, and returns the smallest integer greater or equal to x<br/><a href=\"https://en.wikipedia.org/wiki/Floor_and_ceiling_functions\">see here</a> ","bottom_description":"","calls":[{"arguments":[{"description":"The value to floor","name":"x"}]}]}},{"source":{"header":"lu5_math.h","start_line":77,"end_line":94},"doc":{"_return":{"var":"number","description":"The smallest value"},"name":"min","examples":["min(6, 7); -- returns 6\n\nmin(6, 7, 4); -- returns 4\n\nmin({ 6, 7, 4 }); -- returns 4"],"_type":"method","description":"Return the smallest value.<br/>Can also take any number of arguments, or a table.","bottom_description":"","calls":[{"arguments":[{"description":"The first value","name":"a"},{"description":"The second value","name":"b"}]}]}},{"source":{"header":"lu5_math.h","start_line":96,"end_line":113},"doc":{"_return":{"var":"number","description":"The largest value"},"name":"max","examples":["max(2, 5); -- returns 5\n\nmax(2, 5, 7); -- returns 7\n\nmax({ 2, 5, 7 }); -- returns 7"],"_type":"method","description":"Return the largest value.<br/>Can also take any number of arguments, or a table.","bottom_description":"","calls":[{"arguments":[{"description":"The first value","name":"a"},{"description":"The second value","name":"b"}]}]}},{"source":{"header":"lu5_math.h","start_line":115,"end_line":123},"doc":{"_return":{"var":"number","description":"The absolote value of the input"},"name":"abs","examples":{},"_type":"method","description":"Returns the absolute value of x<br/><a href=\"https://en.wikipedia.org/wiki/Absolute_value\">see here</a> ","bottom_description":"","calls":[{"arguments":[{"description":"The input value","name":"x"}]}]}},{"source":{"header":"lu5_math.h","start_line":125,"end_line":141},"doc":{"_return":{"var":"number","description":"The mapped value"},"name":"map","examples":["local mouseX_mapped = map(mouseX, 0, width, 0, 100);\n-- mapped mouseX between 0 and 100"],"_type":"method","description":"Maps x from an original range to a target range","bottom_description":"","calls":[{"arguments":[{"description":"The value to map","name":"value"},{"description":"The start of the initial range","name":"start"},{"description":"The end of the initial range","name":"end"},{"description":"The start of the target range","name":"target_start"},{"description":"The end of the target range","name":"target_end"}]}]}},{"source":{"header":"lu5_math.h","start_line":144,"end_line":184},"doc":{"_return":{"var":"number","description":"The distance between the points"},"name":"dist","examples":{},"_type":"method","description":"Calculates the distance between 2 points in 2D or 3D space","bottom_description":"","calls":[{"arguments":[{"description":"The x coordinate of the first point","name":"x1"},{"description":"The y coordinate of the first point","name":"y1"},{"description":"The x coordinate of the second point","name":"x2"},{"description":"The y coordinate of the second point","name":"y2"}],"example":"local d = dist(0, 0, 3, 4);\nprint(d) -- 5"},{"arguments":[{"description":"The x coordinate of the first point","name":"x1"},{"description":"The y coordinate of the first point","name":"y1"},{"description":"The z coordinate of the first point","name":"z1"},{"description":"The x coordinate of the second point","name":"x2"},{"description":"The y coordinate of the second point","name":"y2"},{"description":"The z coordinate of the second point","name":"z2"}],"example":"local d = dist(0, 0, 0, 2, 3, 6);\nprint(d) -- 7"},{"arguments":[{"description":"The first vector","name":"v1"},{"description":"The second vector","name":"v2"}],"example":"local a = createVector(-1, -1);\nlocal b = createVector( 2,  3);\n\nlocal d = dist(a, b);\nprint(d) -- 5"}]}},{"source":{"header":"lu5_math.h","start_line":186,"end_line":195},"doc":{"_return":{"var":"number","description":"The constrained value"},"name":"constrain","examples":{},"_type":"method","description":"Limits x to a minimum and maximum value","bottom_description":"","calls":[{"arguments":[{"description":"The input value","name":"x"},{"description":"The minimum value","name":"min"},{"description":"The maximum value","name":"max"}]}]}},{"source":{"header":"lu5_math.h","start_line":197,"end_line":204},"doc":{"_return":{"var":"number","description":"The output value"},"name":"sin","examples":{},"_type":"method","description":"Sine function (Trigonometry) ","bottom_description":"","calls":[{"arguments":[{"description":"The input value","name":"x"}]}]}},{"source":{"header":"lu5_math.h","start_line":206,"end_line":213},"doc":{"_return":{"var":"number","description":"The output value"},"name":"cos","examples":{},"_type":"method","description":"Cosine function (Trigonometry) ","bottom_description":"","calls":[{"arguments":[{"description":"The input value","name":"x"}]}]}},{"source":{"header":"lu5_math.h","start_line":215,"end_line":222},"doc":{"_return":{"var":"number","description":"The output value"},"name":"tan","examples":{},"_type":"method","description":"Tangent function (Trigonometry) ","bottom_description":"","calls":[{"arguments":[{"description":"The input value","name":"x"}]}]}},{"source":{"header":"lu5_math.h","start_line":224,"end_line":227},"doc":{"name":"PI","examples":{},"_type":"constant","description":"","bottom_description":"","calls":[{"arguments":{}}]}},{"source":{"header":"lu5_math.h","start_line":230,"end_line":233},"doc":{"name":"TWO_PI","examples":{},"_type":"constant","description":"","bottom_description":"","calls":[{"arguments":{}}]}},{"source":{"header":"lu5_math.h","start_line":236,"end_line":239},"doc":{"name":"HALF_PI","examples":{},"_type":"constant","description":"","bottom_description":"","calls":[{"arguments":{}}]}},{"source":{"header":"lu5_math.h","start_line":242,"end_line":246},"doc":{"name":"QUARTER_PI","examples":{},"_type":"constant","description":"","bottom_description":"","calls":[{"arguments":{}}]}}],"name":"math","source":"math"}