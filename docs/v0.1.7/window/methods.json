{"methods":[{"source":{"header":"window.h","start_line":7,"end_line":28},"doc":{"name":"createWindow","examples":["function setup()\n  -- Create the window here\n  createWindow(600, 600);\nend\n\nfunction draw()\n  -- draw things\nend"],"_type":"method","description":"Create a GLFW window.","bottom_description":"It is also possible to create a window in the global scope without defining a setup function.","calls":[{"arguments":[{"description":"Window width","name":"w"},{"description":"Window height","name":"h"},{"description":"Rendering mode, either `GL2D` or `GL3D`, by default `GL2D` is set.","name":"[mode]"}]}]}},{"source":{"header":"window.h","start_line":30,"end_line":54},"doc":{"name":"frameRate","examples":["x = 0;\n\nfunction setup()\n  createWindow(400, 400);\n  frameRate(24);\nend\n\nfunction draw()\n  background(51);\n  text('fps: ' .. frameRate(), 20, 10);\n\n  circle(x, 200, 32);\n  x = x + 1;\nend"],"_type":"method","description":"Set the frame rate ","bottom_description":"If frame rate is called without an argument, it will return frame per seconds ","calls":[{"arguments":[{"description":"The frame rate to set","name":"fps"}]}]}},{"source":{"header":"window.h","start_line":56,"end_line":62},"doc":{"name":"noLoop","examples":{},"_type":"method","description":"Prevents lu5 from calling <code class=\"inline\">draw</code> again. <br/><br/>When <code class=\"inline\">noLoop</code> is called, the draw continues execution, but will not be called again.","bottom_description":"","calls":[{"arguments":{}}]}},{"source":{"header":"window.h","start_line":64,"end_line":68},"doc":{"name":"loop","examples":{},"_type":"method","description":"Allow lu5 to call the <code class=\"inline\">draw</code> function.","bottom_description":"","calls":[{"arguments":{}}]}},{"source":{"header":"window.h","start_line":70,"end_line":94},"doc":{"name":"deltaTime","examples":["x = 0;\nvx = 128;\n\nfunction setup()\n  createWindow(400, 400);\n  frameRate(24); -- try with 60\nend\n\nfunction draw()\n  background(51);\n\n  circle(x, height/2, 32);\n\n  -- Get the same velocity with different framerates\n  x = x + vx * deltaTime;\nend"],"_type":"global","description":"Elapsed time since the last draw call in seconds","bottom_description":"","calls":[{"arguments":{}}]}},{"source":{"header":"window.h","start_line":97,"end_line":109},"doc":{"name":"width","examples":["createWindow(800, 600);\n\nprint(width);\n-- 800"],"_type":"global","description":"The window's width in pixels. If no window was created, this value is <code class=\"inline\">nil</code>","bottom_description":"","calls":[{"arguments":{}}]}},{"source":{"header":"window.h","start_line":112,"end_line":124},"doc":{"name":"height","examples":["createWindow(800, 600);\n\nprint(height);\n-- 600"],"_type":"global","description":"The window's height in pixels. If no window was created, this value is <code class=\"inline\">nil</code>","bottom_description":"","calls":[{"arguments":{}}]}},{"source":{"header":"window.h","start_line":127,"end_line":145},"doc":{"name":"windowResized","examples":["function setup()\n    createWindow(500, 500);\nend\n\nfunction draw()\n    background(51)\nend\n\nfunction windowResized()\n    print('Resized!')\nend"],"_type":"event","description":"Called when the window is resized","bottom_description":"","calls":[{"arguments":{}}]}}],"name":"window","source":"window"}