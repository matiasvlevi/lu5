 function set_search(root){let search_section=document.querySelector('.search-section');search_section.style.display='flex';let search=document.getElementById('search');let search_box=document.querySelector('.search-box');search_box.style.display='none';const MAX_ELEMENTS=8;let cursor=0;let is_focused=false;let ordered_symbols=[];function sortByClosestMatch(items,property,input,maxThreshold=8){if (!property || !input){return [];}const getRelevancyScore=(str,query)=>{if (str.startsWith(query)) return 1;if (str.includes(query)) return 0.5;return 0;};const getCloseness=(str,query)=>{return str.indexOf(query) !==-1 ? str.indexOf(query) : Number.MAX_SAFE_INTEGER;};const scoredItems=items.map(item=>{return{item,score: getRelevancyScore(item[property],input),closeness: getCloseness(item[property],input)};});scoredItems.sort((a,b)=>{if (a.score===b.score){return a.closeness - b.closeness;}return b.score - a.score;});let lastScore=scoredItems[0]?.score;let reducedThreshold=1;for (let i=1;i < scoredItems.length;i++){if (scoredItems[i].score===lastScore){reducedThreshold++;}else{break;}}const threshold=Math.min(maxThreshold,reducedThreshold);return scoredItems.slice(0,threshold).map(entry=> entry.item);}function clear_search_box(){while (search_box.firstChild){search_box.removeChild(search_box.lastChild);}}function update_search_box(){clear_search_box();if (ordered_symbols.length==0){search_box.style['padding-top']='0rem';search_box.style['padding-bottom']='0rem';}else{search_box.style['padding-top']='0.75rem';search_box.style['padding-bottom']='0.75rem';}ordered_symbols.forEach((symbol,i)=>{let p=document.createElement('p');p.innerHTML=symbol.name;if (cursor==i) p.id="cursor";search_box.appendChild(p);});}function showSearchBox(){search_box.style.display='inline-block';search_box.style.position='absolute';}function hideSearchBox(){search_box.style.display='none';}function createCursorCallback(ordered){if (!is_focused) return function(_){};return function (e){switch (e.key){case "ArrowUp": cursor=Math.max(cursor - 1,0);break;case "ArrowDown": cursor=Math.min(cursor + 1,ordered.length);break;case "Enter": let symbol=ordered_symbols[cursor];let link=`${root}${symbol.module}/${symbol.name}`;let a=document.createElement('a');a.href=link;a.style.display='none';a.click();a.remove();break;}update_search_box();}};fetch(root + 'modules.json') .then(r=> r.json()) .then(({symbols})=>{search.addEventListener('focus',function (e){showSearchBox();is_focused=true;});search.addEventListener('blur',function (e){hideSearchBox();is_focused=false;});search.addEventListener('input',function (e){cursor=0;ordered_symbols=sortByClosestMatch(symbols,'name',e.target.value,MAX_ELEMENTS);window.onkeydown=createCursorCallback(ordered_symbols);update_search_box();});})}